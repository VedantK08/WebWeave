previous loginpage..
import { AppBar, Box, Modal, Toolbar, Typography, styled } from "@mui/material";
import { Button, TextField, FormControl } from "@mui/material";
import { Link, useNavigate } from "react-router-dom";
import { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { checkUser, selectUser } from "../Features/userSlice";

const StyledToolBar = styled(Toolbar)({
  display: "flex",
  justifyContent: "space-between",
});

const StyledModal = styled(Modal)({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
});

const LoginPage = () => {
  const [open1, setOpen1] = useState(false);
  const [user, setUser] = useState({
    email: "",
    password: "",
  });
  const [message, setMessage] = useState("");
  const dispatch = useDispatch();
  const navigate = useNavigate();

  const handleChange = (e) => {
    setUser((prev) => {
      return {
        ...prev,
        [e.target.name]: e.target.value,
      };
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const actionResult = await dispatch(checkUser(user));
      const data = actionResult.payload;
      setMessage(data.message);
      if (data.user.user_id) {
        localStorage.setItem("user_id", JSON.stringify(data.user.user_id));
        navigate("/userHome");
      }
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <>
      <AppBar position="sticky">
        <StyledToolBar>
          <Typography
            variant="h6"
            sx={{ display: { xs: "none", sm: "block" } }}
          >
            VEDANTU
          </Typography>
        </StyledToolBar>
      </AppBar>
      <br></br>
      <form>
        <FormControl
          sx={{
            mb: 2,
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <TextField
            sx={{ width: "20%" }}
            label="Email "
            name="email"
            type="text"
            variant="outlined"
            required
            onChange={handleChange}
          />
        </FormControl>
        <FormControl
          sx={{
            mb: 2,
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <TextField
            sx={{ width: "20%" }}
            id="outlined-basic"
            label="Password"
            name="password"
            type="password"
            variant="outlined"
            required
            onChange={handleChange}
          />
        </FormControl>
        <Button
          type="submit"
          variant="contained"
          color="primary"
          sx={{
            width: "200px",
            marginBottom: "10px",
            marginLeft: "auto",
            marginRight: "auto",
            display: "block",
          }}
          onClick={handleSubmit}
        >
          Login
        </Button>
      </form>
      <Button
        variant="contained"
        color="primary"
        sx={{
          width: "200px",
          marginBottom: "10px",
          marginLeft: "auto",
          marginRight: "auto",
          display: "block",
        }}
        onClick={() => setOpen1(true)}
      >
        Forgot Password
      </Button>
      <StyledModal
        open={open1}
        onClose={() => setOpen1(false)}
        aria-labelledby="modal-modal-title"
        aria-describedby="modal-modal-description"
      >
        <Box
          height={400}
          width={300}
          bgcolor={"white"}
          color={"black"}
          p={3}
          borderRadius={5}
        >
          <FormControl fullWidth sx={{ mb: 2 }}>
            <TextField
              id="outlined-basic"
              label="Enter Current Password"
              type="text"
              variant="outlined"
              required
            />{" "}
          </FormControl>

          <FormControl fullWidth sx={{ mb: 2 }}>
            <TextField
              id="outlined-basic"
              label="Enter new Password"
              type="password"
              variant="outlined"
              required
            />{" "}
          </FormControl>
          <FormControl fullWidth sx={{ mb: 2 }}>
            <TextField
              id="outlined-basic"
              label="Re-Enter new Password"
              type="password"
              variant="outlined"
              required
            />
          </FormControl>
          <Button type="submit" variant="contained" color="primary" fullWidth>
            Change Password
          </Button>
        </Box>
      </StyledModal>
      <br />
      <Link to="/createUser">
        <Button
          variant="contained"
          sx={{
            width: "200px",
            marginBottom: "10px",
            marginLeft: "auto",
            marginRight: "auto",
            display: "block",
          }}
        >
          Sign-Up
        </Button>
      </Link>
      <Typography variant="h6" sx={{ position: "center" }} gutterBottom>
        {message}
      </Typography>
    </>
  );
};

export default LoginPage;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------





Register page previous code 

import {
  Box,
  Button,
  FormControl,
  Modal,
  TextField,
  Typography,
  styled,
} from "@mui/material";
import React, { useState } from "react";
import { useDispatch } from "react-redux";
import { useNavigate } from "react-router-dom";
import { postData } from "../Features/userSlice";

const StyledModal = styled(Modal)({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
});

const Register = () => {
  const dispatch = useDispatch();
  const [open, setOpen] = useState(true);
  const [user, setUser] = useState({
    name: "",
    email: "",
    password: "",
  });
  const [message, setMessage] = useState("");
  const navigate = useNavigate();

  const handleClose = () => {
    setOpen(false);
    navigate("/loginUser");
  };

  const handleChange = (e) => {
    setUser((prev) => {
      return {
        ...prev,
        [e.target.name]: e.target.value,
      };
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    dispatch(postData(user)).then((data) => setMessage(data.payload.message));
    setUser({
      name: "",
      email: "",
      password: "",
    });
  };

  return (
    <StyledModal
      open={open}
      onClose={handleClose}
      aria-labelledby="modal-modal-title"
      aria-describedby="modal-modal-description"
    >
      <Box
        height={400}
        width={300}
        bgcolor={"lightGreen"}
        color={"black"}
        p={3}
        borderRadius={5}
      >
        <Typography id="modal-modal-title" variant="h6" component="h2">
          Create New User
        </Typography>
        <form>
          <FormControl fullWidth sx={{ mb: 2 }}>
            <TextField
              label="Enter Your Name"
              type="text"
              variant="outlined"
              name="name"
              value={user.name}
              onChange={handleChange}
              required
            />
          </FormControl>
          <FormControl fullWidth sx={{ mb: 2 }}>
            <TextField
              label="Email"
              type="text"
              variant="outlined"
              name="email"
              value={user.email}
              onChange={handleChange}
              required
            />
          </FormControl>
          <FormControl fullWidth sx={{ mb: 2 }}>
            <TextField
              label="Password"
              type="password"
              variant="outlined"
              name="password"
              value={user.password}
              onChange={handleChange}
              required
            />
          </FormControl>
          <Button
            type="submit"
            variant="contained"
            color="primary"
            sx={{ mb: 2 }}
            onClick={handleSubmit}
            fullWidth
          >
            Sign-Up
          </Button>
        </form>
        <Typography variant="h6" gutterBottom>
          {message}
        </Typography>
      </Box>
    </StyledModal>
  );
};

export default Register;
